/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.oodjassignment;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.ParseException;

/**
 *
 * @author renee
 */
public class AdminManageAppl extends javax.swing.JFrame {

    /**
     * Creates new form ManageAppl
     */
    public AdminManageAppl() {
        initComponents();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAppl = new javax.swing.JTable();
        btnBrowse = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        btnDecline = new javax.swing.JButton();
        tfTPNo = new javax.swing.JTextField();
        tfRoomNo = new javax.swing.JTextField();
        tfPax = new javax.swing.JTextField();
        tfMonthlyPrice = new javax.swing.JTextField();
        tfMonth = new javax.swing.JTextField();
        tfDateAppl = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        tfTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tfProcess = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tfStartDate = new javax.swing.JTextField();
        tfEndDate = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Manage Hostel Application");

        tbAppl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbAppl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbApplMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbAppl);

        btnBrowse.setText("Browse...");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Selected Application:");

        jLabel3.setText("Room Number:");

        jLabel4.setText("Date Applied:");

        jLabel5.setText("TP Number:");

        jLabel6.setText("Pax:");

        jLabel7.setText("Monthly Price:");

        jLabel8.setText("Month:");

        jLabel9.setText("Total:");

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnDecline.setText("Decline");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });

        tfTPNo.setEditable(false);

        tfRoomNo.setEditable(false);

        tfPax.setEditable(false);

        tfMonthlyPrice.setEditable(false);

        tfMonth.setEditable(false);
        tfMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMonthActionPerformed(evt);
            }
        });

        tfDateAppl.setEditable(false);
        tfDateAppl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDateApplActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tfTotal.setEditable(false);

        jLabel11.setText("Process:");

        tfProcess.setEditable(false);
        tfProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfProcessActionPerformed(evt);
            }
        });

        jLabel12.setText("Start Date:");

        jLabel13.setText("End Date:");

        tfStartDate.setEditable(false);
        tfStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfStartDateActionPerformed(evt);
            }
        });

        tfEndDate.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfRoomNo)
                                    .addComponent(tfPax)
                                    .addComponent(tfMonthlyPrice)
                                    .addComponent(tfMonth)
                                    .addComponent(tfTotal)
                                    .addComponent(tfProcess)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnAccept)
                                .addGap(26, 26, 26)
                                .addComponent(btnDecline)
                                .addGap(36, 36, 36))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel12)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfTPNo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tfEndDate, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfStartDate, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfDateAppl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(24, 24, 24))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(297, 297, 297))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(tfDateAppl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(tfStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(tfEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(tfTPNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(tfRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(tfPax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(tfMonthlyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(tfProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAccept)
                                    .addComponent(btnDecline)))
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18)
                        .addComponent(btnBack))
                    .addComponent(btnBrowse))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        try
        {
            String application = btnBrowse.getText();
            File F = new File("Application.txt");
            BufferedReader br = new BufferedReader(new FileReader(F));
            String firstLine = br.readLine().trim();
            String[] columnName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)tbAppl.getModel();
            model.setColumnIdentifiers(new Object[]{columnName[0],columnName[1],columnName[2],columnName[3],columnName[4],columnName[5],columnName[6],columnName[7],columnName[8],columnName[9]});
            model.setRowCount(0);

            Object[] tableLines = br.lines().toArray();
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String Line = tableLines[i].toString().trim();
                String[] dataRow = Line.split(",");
                if(dataRow[9].equals("In-progress"))
                {
                    model.addRow(new Object[]{dataRow[0],dataRow[1],dataRow[2],dataRow[3],dataRow[4],dataRow[5],dataRow[6],dataRow[7],dataRow[8],dataRow[9]});
                }               
            }
        }
        catch(IOException Ex)
        {
             Ex.printStackTrace();
        }                        
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
     try {
        String DateAppl = tfDateAppl.getText();
        String TPNo = tfTPNo.getText();
        String RoomNo = tfRoomNo.getText();
        String Line1;
        File F = new File("Application.txt");
        Scanner Sc1 = new Scanner(F);
        Integer log = 0;
        while (Sc1.hasNextLine()) {
            Line1 = Sc1.nextLine();
            String UserLine[] = Line1.split(",");
            if (UserLine[3].equals(TPNo) && UserLine[0].equals(DateAppl)) {
                log = 1;
            }
        }

        if (log == 1) {
            ArrayList<String> tempArray = new ArrayList<>();
            try {
                try (FileReader fr = new FileReader("Application.txt")) {
                    Scanner Sc2 = new Scanner(fr);
                    String Line2;
                    String[] lineArr;

                    while ((Line2 = Sc2.nextLine()) != null) {
                        lineArr = Line2.split(",");
                        if (lineArr[3].equals(TPNo) && lineArr[0].equals(DateAppl)) {
                            tempArray.add(
                                    lineArr[0] + "," +
                                    lineArr[1] + "," +
                                    lineArr[2] + "," +
                                    lineArr[3] + "," +
                                    lineArr[4] + "," +
                                    lineArr[5] + "," +
                                    lineArr[6] + "," +
                                    lineArr[7] + "," +
                                    lineArr[8] + "," +
                                    "Declined");
                            String RoomLine;
                            File RoomFile = new File("Room.txt");
                            Scanner RoomSc = new Scanner(RoomFile);
                            ArrayList<String> tempRoomArray = new ArrayList<>();
                            while (RoomSc.hasNextLine()) {
                                RoomLine = RoomSc.nextLine();
                                String RoomArr[] = RoomLine.split(",");
                                if (RoomArr[0].equals(RoomNo)) {
                                    int applied = Integer.parseInt(RoomArr[4]) - 1;
                                       tempRoomArray.add(
                                               RoomArr[0] + "," +
                                               RoomArr[1] + "," +
                                               RoomArr[2] + "," +
                                               "Available" + "," +
                                               applied);
                                } else {
                                    tempRoomArray.add(RoomLine);
                                }
                            }
                            RoomSc.close();

                            try {
                                try (PrintWriter pw = new PrintWriter("Room.txt")) {
                                    for (String str : tempRoomArray) {
                                        pw.println(str);
                                    }
                                    pw.close();
                                }
                            } catch (Exception e) {
                                e.printStackTrace();
                            }

                            JOptionPane.showMessageDialog(null, "Hostel Application is declined!", "Decline hostel application", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            tempArray.add(Line2);
                        }
                    }
                    fr.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } catch (Exception e) {
                  e.printStackTrace();
            }

            try {
                try (PrintWriter pw = new PrintWriter("Application.txt")) {
                    for (String str : tempArray) {
                        pw.println(str);
                    }
                    pw.close();
                } catch (Exception e) {
                      e.printStackTrace();
                }
            } catch (Exception e) {
                  e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Error!", "Failed", JOptionPane.ERROR_MESSAGE);
        }
        tfDateAppl.setText("");
        tfStartDate.setText("");
        tfEndDate.setText("");        
        tfTPNo.setText("");
        tfRoomNo.setText("");
        tfPax.setText("");
        tfMonthlyPrice.setText("");
        tfMonth.setText("");
        tfTotal.setText("");
        tfProcess.setText("");
     } catch (IOException Ex) {
          Ex.printStackTrace();
    }
     
    try
    {
        String application = btnBrowse.getText();
        File F = new File("Application.txt");
        BufferedReader br = new BufferedReader(new FileReader(F));
        String firstLine = br.readLine().trim();
        String[] columnName = firstLine.split(",");
        DefaultTableModel model = (DefaultTableModel)tbAppl.getModel();
        model.setColumnIdentifiers(new Object[]{columnName[0],columnName[1],columnName[2],columnName[3],columnName[4],columnName[5],columnName[6],columnName[7],columnName[8],columnName[9]});
        model.setRowCount(0);

        Object[] tableLines = br.lines().toArray();

        for(int i = 0; i < tableLines.length; i++)
        {
            String Line = tableLines[i].toString().trim();
            String[] dataRow = Line.split(",");
            if(dataRow[9].equals("In-progress"))
            {
                model.addRow(new Object[]{dataRow[0],dataRow[1],dataRow[2],dataRow[3],dataRow[4],dataRow[5],dataRow[6],dataRow[7],dataRow[8],dataRow[9]});
            }
            else{
               model.setRowCount(0);
            }
        }
    }
    catch(IOException Ex)
    {
          Ex.printStackTrace();
    }                    
    }//GEN-LAST:event_btnDeclineActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
        new AdminPage().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void tbApplMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbApplMouseClicked
        DefaultTableModel model = (DefaultTableModel)tbAppl.getModel();
        int SelectedRow = tbAppl.getSelectedRow();
        tfDateAppl.setText(model.getValueAt(SelectedRow,0).toString());
        tfStartDate.setText(model.getValueAt(SelectedRow,1).toString());
        tfEndDate.setText(model.getValueAt(SelectedRow,2).toString());
        tfTPNo.setText(model.getValueAt(SelectedRow,3).toString());
        tfRoomNo.setText(model.getValueAt(SelectedRow,4).toString());
        tfPax.setText(model.getValueAt(SelectedRow,5).toString());
        tfMonth.setText(model.getValueAt(SelectedRow,6).toString());        
        tfMonthlyPrice.setText(model.getValueAt(SelectedRow,7).toString());
        tfTotal.setText(model.getValueAt(SelectedRow,8).toString());
        tfProcess.setText(model.getValueAt(SelectedRow,9).toString());
    }//GEN-LAST:event_tbApplMouseClicked

    private void tfDateApplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDateApplActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDateApplActionPerformed

    private void tfMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMonthActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
    try {
        String DateAppl = tfDateAppl.getText();
        String TPNo = tfTPNo.getText();

        String Line1;
        File F = new File("Application.txt");
        Scanner Sc1 = new Scanner(F);
        Integer log = 0;
        while (Sc1.hasNextLine()) {
            Line1 = Sc1.nextLine();
            String UserLine[] = Line1.split(",");
            if (UserLine[3].equals(TPNo) && UserLine[0].equals(DateAppl)) {
                log = 1;
                break;  // Exit the loop once a match is found
            }
        }

        if (log == 1) {
            ArrayList<String> tempArray = new ArrayList<>();
            try {
                try (FileReader fr = new FileReader("Application.txt")) {
                    Scanner Sc2 = new Scanner(fr);
                    String Line2;
                    String[] lineArr;

                    while (Sc2.hasNextLine()) {
                        Line2 = Sc2.nextLine();
                        lineArr = Line2.split(",");
                        if (lineArr[3].equals(TPNo) && lineArr[0].equals(DateAppl)) {
                            tempArray.add(
                                    lineArr[0] + "," +
                                    lineArr[1] + "," +
                                    lineArr[2] + "," +
                                    lineArr[3] + "," +
                                    lineArr[4] + "," +
                                    lineArr[5] + "," +
                                    lineArr[6] + "," +
                                    lineArr[7] + "," +
                                    lineArr[8] + "," +
                                    "Accepted");
                        } else {
                            tempArray.add(Line2);
                        }
                    }
                    fr.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            try {
                try (PrintWriter pw = new PrintWriter("Application.txt")) {
                    for (String str : tempArray) {
                        pw.println(str);
                    }
                    pw.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            JOptionPane.showMessageDialog(null, "Application Accepted!", "Application", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "No matching application found!", "Application", JOptionPane.ERROR_MESSAGE);
        }

        File paymentFile = new File("Payment.txt");
        BufferedWriter paymentWriter = new BufferedWriter(new FileWriter(paymentFile, true));
        java.util.Date startDate = null;
        java.util.Date endDate = null;
        try {
            startDate = new SimpleDateFormat("dd/MM/yyyy").parse(tfStartDate.getText());
            endDate = new SimpleDateFormat("dd/MM/yyyy").parse(tfEndDate.getText());
        } catch (ParseException e) {
              e.printStackTrace();
        }

        Calendar cal = Calendar.getInstance();
        cal.setTime(startDate);
        while (!cal.getTime().after(endDate)) {
            String paymentMonth = new SimpleDateFormat("MMMMyyyy").format(cal.getTime());
            paymentWriter.append(DateAppl+","+paymentMonth + "," + tfTPNo.getText() + "," + tfRoomNo.getText() + "," + tfPax.getText() + "," + tfMonthlyPrice.getText() + ",Unpaid"+","+"-"+"\n");
            cal.add(Calendar.MONTH, 1);
        }
        paymentWriter.close();

        tfDateAppl.setText("");
        tfStartDate.setText("");
        tfEndDate.setText("");
        tfTPNo.setText("");
        tfRoomNo.setText("");
        tfPax.setText("");
        tfMonthlyPrice.setText("");
        tfMonth.setText("");
        tfTotal.setText("");
        tfProcess.setText("");

        // Code for loading data into table model
        String application = btnBrowse.getText();
        File F1 = new File("Application.txt");
        BufferedReader br = new BufferedReader(new FileReader(F1));
        String firstLine = br.readLine().trim();
        String[] columnName = firstLine.split(",");
        DefaultTableModel model = (DefaultTableModel) tbAppl.getModel();
        model.setColumnIdentifiers(new Object[]{columnName[0], columnName[1], columnName[2], columnName[3], columnName[4], columnName[5], columnName[6], columnName[7], columnName[8], columnName[9]});
        model.setRowCount(0);

        Object[] tableLines = br.lines().toArray();

        for (int i = 0; i < tableLines.length; i++) {
            String Line = tableLines[i].toString().trim();
            String[] dataRow = Line.split(",");
            if (dataRow[9].equals("In-progress")) {
                model.addRow(new Object[]{dataRow[0], dataRow[1], dataRow[2], dataRow[3], dataRow[4], dataRow[5], dataRow[6], dataRow[7], dataRow[8], dataRow[9]});
            } else {
                model.setRowCount(0);
            }
        }

        br.close();

    } catch (IOException Ex) {
        Ex.printStackTrace();
    }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void tfProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfProcessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfProcessActionPerformed

    private void tfStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfStartDateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminManageAppl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminManageAppl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminManageAppl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminManageAppl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminManageAppl().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnDecline;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbAppl;
    private javax.swing.JTextField tfDateAppl;
    private javax.swing.JTextField tfEndDate;
    private javax.swing.JTextField tfMonth;
    private javax.swing.JTextField tfMonthlyPrice;
    private javax.swing.JTextField tfPax;
    private javax.swing.JTextField tfProcess;
    private javax.swing.JTextField tfRoomNo;
    private javax.swing.JTextField tfStartDate;
    private javax.swing.JTextField tfTPNo;
    private javax.swing.JTextField tfTotal;
    // End of variables declaration//GEN-END:variables
}
