/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.oodjassignment;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ziwei
 */
public class StudentApplication extends javax.swing.JFrame {

    /**
     * Creates new form StudentApplication
     */
 
    
    public StudentApplication(String Tpnum) {
        initComponents();
        this.tpnum =Tpnum;
        lblTpNum.setText(tpnum);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblTpNum = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblOrder = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbRoom = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfRoomNo = new javax.swing.JTextField();
        tfPax = new javax.swing.JTextField();
        tfMonthlyPrice = new javax.swing.JTextField();
        tfTotal = new javax.swing.JTextField();
        btnApply = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jDate1 = new com.toedter.calendar.JDateChooser();
        jDate = new com.toedter.calendar.JDateChooser();
        tfMonth = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Hostel Application");

        lblOrder.setText("Student TP Number:");

        btnBrowse.setText("Browse...");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        tbRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbRoom.setColumnSelectionAllowed(true);
        tbRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbRoom);
        tbRoom.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel2.setText("Selected Room");

        jLabel3.setText("Room No:");

        jLabel4.setText("Pax:");

        jLabel5.setText("Monthly Price(RM):");

        jLabel6.setText("End Date:");

        jLabel7.setText("Total Price(RM): ");

        tfRoomNo.setEditable(false);
        tfRoomNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRoomNoActionPerformed(evt);
            }
        });

        tfPax.setEditable(false);

        tfMonthlyPrice.setEditable(false);

        tfTotal.setEditable(false);

        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        jLabel8.setText("***Only Available Room will be shown");

        jLabel9.setText("Start Date:");

        jDate1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDate1PropertyChange(evt);
            }
        });

        jDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDatePropertyChange(evt);
            }
        });

        tfMonth.setEditable(false);

        jLabel10.setText("Month:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfMonthlyPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfMonth, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDate1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(jDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfPax, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfRoomNo, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfTotal)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTpNum, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(btnBack1)))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnApply)
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrder)
                    .addComponent(lblTpNum, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBrowse))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(tfRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(tfPax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfMonthlyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(2, 2, 2)
                .addComponent(btnApply)
                .addGap(10, 10, 10)
                .addComponent(btnBack1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        try
        {
            String room = btnBrowse.getText();
            File F = new File("Room.txt");
            BufferedReader br = new BufferedReader(new FileReader(F));
            String firstLine = br.readLine().trim();
            String[] columnName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)tbRoom.getModel();
            model.setColumnIdentifiers(new Object[]{columnName[0],columnName[1],columnName[2],columnName[3],columnName[4]});
            model.setRowCount(0);

            Object[] tableLines = br.lines().toArray();
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String Line = tableLines[i].toString().trim();
                String[] dataRow = Line.split(",");
                if(dataRow[3].equals("Available")){
                    model.addRow(new Object[]{dataRow[0],dataRow[1],dataRow[2],dataRow[3],dataRow[4]}); 
                }                       
            }
        }
        catch(IOException Ex)
        {
             Ex.printStackTrace();
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void tbRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbRoomMouseClicked
        DefaultTableModel model = (DefaultTableModel)tbRoom.getModel();
        int SelectedRow = tbRoom.getSelectedRow();

        tfRoomNo.setText(model.getValueAt(SelectedRow,0).toString());
        tfPax.setText(model.getValueAt(SelectedRow,1).toString());
        tfMonthlyPrice.setText(model.getValueAt(SelectedRow,2).toString());
        updateMonthAndTotal(); 
    }//GEN-LAST:event_tbRoomMouseClicked

    private void tfRoomNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRoomNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRoomNoActionPerformed

private void updateMonthAndTotal() {
    java.util.Date selectedDate = jDate.getDate();
    java.util.Date selectedDate1 = jDate1.getDate();

    if (selectedDate != null && selectedDate1 != null) {
        Calendar cal1 = Calendar.getInstance();
        cal1.setTime(selectedDate);
        Calendar cal2 = Calendar.getInstance();
        cal2.setTime(selectedDate1);

        int monthsDifference = 0;
        int yearDiff = cal2.get(Calendar.YEAR) - cal1.get(Calendar.YEAR);
        int monthDiff = cal2.get(Calendar.MONTH) - cal1.get(Calendar.MONTH);
        monthsDifference = yearDiff * 12 + monthDiff;

        tfMonth.setText(String.valueOf(monthsDifference));

        double price = Double.parseDouble(tfMonthlyPrice.getText());
        double total = monthsDifference * price;
        tfTotal.setText(String.valueOf(total));
    }
}


    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        try {
    //String Tp = lblTpNum.getText();
             String RoomNo = tfRoomNo.getText();
             String Pax = tfPax.getText();
             String MonthlyPrice = tfMonthlyPrice.getText();
             File F = new File("Application.txt");
             java.util.Date selectedDate = jDate.getDate();
             java.text.SimpleDateFormat sdf1 = new java.text.SimpleDateFormat("dd/MM/yyyy");
             String formattedDate = sdf1.format(selectedDate);
             java.util.Date selectedDate1 = jDate1.getDate();
             java.text.SimpleDateFormat sdf2 = new java.text.SimpleDateFormat("dd/MM/yyyy");
             String formattedDate1 = sdf2.format(selectedDate1);
             Calendar cal1 = Calendar.getInstance();
             cal1.setTime(selectedDate);
             Calendar cal2 = Calendar.getInstance();
             cal2.setTime(selectedDate1);
             int monthsDifference = 0;
             int yearDiff = cal2.get(Calendar.YEAR) - cal1.get(Calendar.YEAR);
             int monthDiff = cal2.get(Calendar.MONTH) - cal1.get(Calendar.MONTH);
             monthsDifference = yearDiff * 12 + monthDiff;
            double price = Double.parseDouble(MonthlyPrice);
            double Total = monthsDifference * price;
            updateMonthAndTotal();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Date date = new Date();
            BufferedWriter fw = new BufferedWriter(new FileWriter(F, true));
            fw.append(sdf.format(date)+ "," + formattedDate+ "," +formattedDate1 + ","+ tpnum + "," + RoomNo + "," + Pax + "," + monthsDifference+ ","+MonthlyPrice  + "," + Total + "," + "In-progress"+"\n");
            fw.close();
            JOptionPane.showMessageDialog(null, "Application Sent!", "Application", JOptionPane.INFORMATION_MESSAGE);

            String RoomLine;
            File RoomFile = new File("Room.txt");
            Scanner RoomSc = new Scanner(RoomFile);
            ArrayList<String> tempRoomArray = new ArrayList<>();
            while (RoomSc.hasNextLine()) {
                RoomLine = RoomSc.nextLine();
                String RoomArr[] = RoomLine.split(",");
                if (RoomArr[0].equals(RoomNo)) {
                    int applied = Integer.parseInt(RoomArr[4]) + 1;
                    if (applied < Integer.parseInt(RoomArr[1])) {
                        tempRoomArray.add(
                                RoomArr[0] + "," +
                                RoomArr[1] + "," +
                                RoomArr[2] + "," +
                                RoomArr[3] + "," +
                                applied);
                    } else if (Integer.parseInt(RoomArr[1]) == applied) {
                        tempRoomArray.add(
                                RoomArr[0] + "," +
                                RoomArr[1] + "," +
                                RoomArr[2] + "," +
                                "Unavailable" + "," +
                                applied);
                    }
                } 
                else {
                    tempRoomArray.add(RoomLine);
                }
            }
            RoomSc.close();

            try (PrintWriter pw1 = new PrintWriter("Room.txt")) {
                for (String str : tempRoomArray) {
                    pw1.println(str);
                }
            } catch (Exception e) {
                // Handle exception
                  e.printStackTrace();
            }

            tfRoomNo.setText("");
            tfPax.setText("");
            tfMonthlyPrice.setText("");
            tfMonth.setText("");
            tfTotal.setText("");
            jDate.setDate(null);
            jDate1.setDate(null);
        } catch (Exception e) {
              e.printStackTrace();
        }
        
        try
        {
            String room = btnBrowse.getText();
            File F = new File("Room.txt");
            BufferedReader br = new BufferedReader(new FileReader(F));
            String firstLine = br.readLine().trim();
            String[] columnName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)tbRoom.getModel();
            model.setColumnIdentifiers(new Object[]{columnName[0],columnName[1],columnName[2],columnName[3],columnName[4]});
            model.setRowCount(0);

            Object[] tableLines = br.lines().toArray();
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String Line = tableLines[i].toString().trim();
                String[] dataRow = Line.split(",");
                if(dataRow[3].equals("Available")){
                    model.addRow(new Object[]{dataRow[0],dataRow[1],dataRow[2],dataRow[3],dataRow[4]}); 
                }                              
            }
        }
        catch(IOException Ex)
        {
              Ex.printStackTrace();
        }              
    }//GEN-LAST:event_btnApplyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
        new StudentPage(tpnum).setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        dispose();
        new StudentPage(tpnum).setVisible(true);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void jDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDatePropertyChange
        updateMonthAndTotal();    }//GEN-LAST:event_jDatePropertyChange

    private void jDate1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDate1PropertyChange
        updateMonthAndTotal();
    }//GEN-LAST:event_jDate1PropertyChange
    
     private int total = 0;
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentApplication(tpnum).setVisible(true);
            }
        });
    }

    private static String tpnum;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBrowse;
    private com.toedter.calendar.JDateChooser jDate;
    private com.toedter.calendar.JDateChooser jDate1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblTpNum;
    private javax.swing.JTable tbRoom;
    private javax.swing.JTextField tfMonth;
    private javax.swing.JTextField tfMonthlyPrice;
    private javax.swing.JTextField tfPax;
    private javax.swing.JTextField tfRoomNo;
    private javax.swing.JTextField tfTotal;
    // End of variables declaration//GEN-END:variables
}
